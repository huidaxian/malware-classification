'''
利用训练好的模型进行预测
'''


import tensorflow as tf
import numpy as np
import VGG16_mini as model
import os


os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
scale_pic_width,scale_pic_height = 64,32
x = tf.placeholder(tf.float32,[None,scale_pic_height,scale_pic_width,1])
file_handle = open('result.txt',mode='w')
sess =tf.Session()
vgg = model.vgg16(x)
fc8_finetuining = vgg.probs

saver = tf.train.Saver()
print("model restoring")
saver.restore(sess,"./model/epoch000068.ckpt")

rootdir = './data/predict/'
images = []

for root,sub_folders,files in os.walk(rootdir):
    for name in files:
        images.append(os.path.join(root,name))
labels = []
labellist = ['Android',
'Bashlite',
'BenignWare',
'Dofloo',
'Hajime',
'Mirai',
'Pnscan',
'Tsunami',
'Xorddos',
]
count = 0
for label_path in images:
    count+=1
    if count == 1 or count % 100 ==0:
        print("deal:",count,"个")
    

    image_contents = tf.read_file(label_path)
    image = tf.image.decode_jpeg(image_contents, channels=1)
    image = tf.cast(image, tf.float32)
    image -= [124.87248]  # 减均值
    image.set_shape((scale_pic_height, scale_pic_width, 1))

    image = sess.run(image)

    prob = sess.run(fc8_finetuining, feed_dict={x: [image]})
    max_index = np.argmax(prob)
    file_handle.write(labellist[max_index]+'\n')



